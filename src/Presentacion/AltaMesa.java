/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.Mesa;
import Persistencia.Conexion;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.Writer;
import com.google.zxing.WriterException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.JOptionPane;

/**
 *
 * @author Danilo
 */
public class AltaMesa extends javax.swing.JInternalFrame {

    private static final int qrTamAncho = 4000;
    private static final int qrTamAlto = 4000;
    private static final String formato = "png";
    private static final String ruta = "../qr/CodigoQR_Mesa_";
    private static final String pagina = "www.e-menu.com.uy/";
    
    public AltaMesa() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        mesa = new javax.swing.JComboBox<>();
        generar = new javax.swing.JButton();
        salir = new javax.swing.JButton();

        setTitle("Alta mesa");

        jLabel1.setText("Seleccione la mesa:");

        mesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));

        generar.setText("Aceptar");
        generar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarActionPerformed(evt);
            }
        });

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(103, 103, 103)
                        .addComponent(mesa, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 102, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salir)
                    .addComponent(generar))
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarActionPerformed

//GENERO EL CODIGO QR
        BitMatrix matriz = null;
        Writer writer = new QRCodeWriter();
        String numMesa = mesa.getSelectedItem().toString();
        try{
            matriz = writer.encode(pagina + numMesa, BarcodeFormat.QR_CODE, qrTamAlto, qrTamAlto);
        }catch(WriterException e){
            e.printStackTrace();
        }
        BufferedImage imagen = new BufferedImage(qrTamAlto,qrTamAlto,BufferedImage.TYPE_INT_RGB);
        for(int x = 0; x < qrTamAlto; x++){
            for(int y = 0; y < qrTamAncho; y++){
                int valor = (matriz.get(x,y) ? 0 : 1) & 0xff;
                imagen.setRGB(x, y, (valor == 0 ? 0 : 0xFF0000));
            }
        }
        
//CREO EL ARCHIVO DEL CODIGO Y LO GUARDO EN LA ruta
        FileOutputStream codigo;
        try {
            codigo = new FileOutputStream(ruta+numMesa+"."+formato);
            ImageIO.write(imagen, formato, codigo);
            codigo.close();
            JOptionPane.showMessageDialog(null, "Mesa " + numMesa + " creada correctamente.");
            mesa.setSelectedIndex(0);
        } catch (IOException ex) {
            Logger.getLogger(AltaMesa.class.getName()).log(Level.SEVERE, null, ex);
        }
        
//GUARDO LA IMAGEN Y EL NUMERO DE MESA EN LA BASE DE DATOS
    byte[] imagenEnByte = null;
    try{		
	ByteArrayOutputStream baos = new ByteArrayOutputStream();
	ImageIO.write( imagen, formato, baos );
	baos.flush();
	imagenEnByte = baos.toByteArray();
	baos.close();
			
	}catch(IOException e){
		System.out.println(e.getMessage());
	}
    
        Blob blobData = null;
        try {
            blobData = new SerialBlob(imagenEnByte);
        } catch (SQLException ex) {
            Logger.getLogger(AltaMesa.class.getName()).log(Level.SEVERE, null, ex);
        }
        Mesa mesa = new Mesa(Integer.parseInt(numMesa),blobData);
        Conexion.getInstance().alta(mesa);
    }//GEN-LAST:event_generarActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        salir();
    }//GEN-LAST:event_salirActionPerformed

    void salir(){
        e_menu m = (e_menu) this.getTopLevelAncestor();
        m.desbloquearFondo();
        this.dispose();
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton generar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> mesa;
    private javax.swing.JButton salir;
    // End of variables declaration//GEN-END:variables
}
